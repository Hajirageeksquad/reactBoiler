{"version":3,"sources":["firebase.tsx","context/Reducers/delDataReducer.tsx","context/Actions/actionUserDetail.tsx","config.tsx","context/Actions/getDataAction.tsx","context/services/get.tsx","context/Actions/delDataAction.tsx","context/services/delete.tsx","context/initialState.tsx","context/GlobalState.js","pages/logInPage/logInPage.tsx","pages/signUpPage/signUppage.tsx","pages/homePage/homePage.tsx","context/services/update.tsx","authentication/privateRoute.tsx","authentication/routes.tsx","App.tsx","index.tsx"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Reducer","state","action","type","data","payload","loggedIn","actionsetUserDetail","dispatch","localStorage","getItem","getApiUrI","getDataAction","fetch","then","response","json","getService","delDataAction","id","method","delService","initialState","userDetail","loader","GlobalContext","createContext","GlobalProvider","children","useReducer","Provider","value","history","useState","user","setUser","error","setError","useContext","console","log","className","onSubmit","e","preventDefault","email","password","auth","signInWithEmailAndPassword","onAuthStateChanged","setItem","push","catch","err","message","loginHandler","htmlFor","name","placeholder","onChange","dub","target","to","SignUpPage","createUserWithEmailAndPassword","uid","userObj","fullName","firestore","collection","doc","set","props","update","setUpdate","setId","setData","title","setTitle","onClick","filter","single","body","JSON","stringify","headers","updateService","signOut","map","sin","index","key","withRouter","useEffect","path","exact","component","homePage","PrivateRoutes","LogInPage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0690b8f.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nexport default firebase.initializeApp({\r\n  apiKey: \"AIzaSyBaSMd1-mK6L2PkGB8s0IO2y0Mw4-jpNIk\",\r\n  authDomain: \"chat-app-with-firestore-aac6c.firebaseapp.com\",\r\n  databaseURL: \"https://chat-app-with-firestore-aac6c.firebaseio.com\",\r\n  projectId: \"chat-app-with-firestore-aac6c\",\r\n  storageBucket: \"chat-app-with-firestore-aac6c.appspot.com\",\r\n  messagingSenderId: \"160618496536\",\r\n  appId: \"1:160618496536:web:8baa56fc32879652ce796d\"\r\n});","export const Reducer = (state: any, action: any) => {\r\n    switch (action.type) {\r\n        case 'GET_DATA':\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            };\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedIn: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","export const actionsetUserDetail = (dispatch:any) => {\r\n    let loggedIn=localStorage.getItem('logged')\r\n    if(loggedIn){\r\n        dispatch({\r\n            type: 'SET_USER',\r\n            payload: loggedIn\r\n        });\r\n    }\r\n};","export const getApiUrI = 'https://jsonplaceholder.typicode.com/posts';\r\n","//  import { getApiUrI } from '../../config';\r\nimport {getService} from '../services/get'\r\nexport const getDataAction = (dispatch:any) => {\r\n    getService(dispatch)\r\n};","import { getApiUrI } from '../../config';\r\nexport const getService = function (dispatch:any) {\r\n    fetch(getApiUrI)\r\n    .then(response => response.json())\r\n     .then(data => \r\n         dispatch({\r\n                type: 'GET_DATA',\r\n                payload: data\r\n            })\r\n     )\r\n};","import {delService} from '../services/delete'\r\nexport const delDataAction = (id:any,data:any,dispatch:any) => {\r\n    delService(id,data,dispatch)\r\n};","import { getApiUrI } from '../../config';\r\nexport const delService = function (id:any,data:any,dispatch:any) {\r\n    fetch(`${getApiUrI}/${id}`,{\r\n        method:'DELETE'\r\n    })\r\n        .then(() => \r\n             dispatch({\r\n                type: 'GET_DATA',\r\n                payload: data\r\n            })\r\n            )\r\n};","export const initialState = {\r\n    userDetail: \"\",\r\n    loader: true ,\r\n    data: []\r\n};","import React, {createContext, useReducer} from 'react';\r\n// import {setUserReducer} from './Reducers/setUserReducer';\r\n// import {getDataReducer} from './Reducers/getDataReducer';\r\nimport {Reducer} from './Reducers/delDataReducer';\r\n import {actionsetUserDetail} from './Actions/actionUserDetail';\r\nimport {getDataAction} from './Actions/getDataAction';\r\nimport {delDataAction} from './Actions/delDataAction';\r\nimport {initialState} from './initialState';\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(Reducer, initialState);\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        state: state,\r\n        actionsetUserDetail,\r\n        delDataAction,\r\n        getDataAction,\r\n        dispatch,\r\n        initialState,\r\n        }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}","import React, { useState ,useContext} from 'react'\r\nimport firebase from '../../firebase'\r\nimport {Link} from 'react-router-dom';\r\nimport {GlobalContext} from '../../context/GlobalState'\r\ntype User = {\r\n    email: string | '';\r\n    password: string | '';\r\n}\r\nexport default ({history}:any) => {\r\n    const [user, setUser] = useState<User | any>(null);\r\n    const [error, setError] = useState('');\r\n    const {state}:any = useContext(GlobalContext);\r\n    console.log(\"userDetail\",state);\r\n    const loginHandler = (e: any) => {\r\n        e.preventDefault();\r\n        if (user === null) {\r\n            setError(\"email and password are required fields\");\r\n        }\r\n        else {\r\n            if (user && (!user.email || !user.password)) {\r\n                if (!user.email) {\r\n                    setError(\"email is required fields\");\r\n                }\r\n                if (!user.password) {\r\n                    setError(\"password is required fields\");\r\n                }\r\n            }\r\n            else {\r\n                firebase.auth().signInWithEmailAndPassword(user.email, user.password)\r\n                    .then(() => {\r\n                        firebase.auth().onAuthStateChanged(() => {\r\n                             localStorage.setItem('logged', \"true\")\r\n                               history.push('/')\r\n                      });\r\n                    })\r\n                    .catch((err) => {\r\n                        setError(err.message);\r\n                    })\r\n            }\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"bg-gray-200\">\r\n            <div className=\"py-20\">\r\n                <div className=\"mt-8\">\r\n                    <h1 className=\"text-3xl mb-2 text-center font-bold\">Sign In</h1>\r\n                    <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n                        <form onSubmit={(e) => {\r\n                            loginHandler(e)\r\n                        }}>\r\n                            <label htmlFor=\"userEmail\" className=\"block\">Email:</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"my-1 p-1 w-full outline-none border\"\r\n                                name=\"userEmail\"\r\n                                placeholder=\"E.g: hajira@gmail.com\"\r\n                                value={user && user.email ? user.email : \"\"}\r\n                                onChange={\r\n                                    (e) => {\r\n                                        setError(\"\");\r\n                                        let dub = { ...user }\r\n                                        dub.email = e.target.value;\r\n                                        setUser(dub);\r\n                                    }\r\n                                }\r\n                            />\r\n\r\n                            <label htmlFor=\"userPassword\" className=\"block\">\r\n                                Password:\r\n                             </label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"mt-1 mb-3 p-1 w-full outline-none border\"\r\n                                name=\"userPassword\"\r\n                                value={user && user.password ? user.password : \"\"}\r\n                                placeholder=\"Your Password\"\r\n                                id=\"userPassword\"\r\n                                onChange={\r\n                                    (e) => {\r\n                                        setError(\"\");\r\n                                        let dub = { ...user }\r\n                                        dub.password = e.target.value;\r\n                                        setUser(dub);\r\n                                    }\r\n                                }\r\n\r\n                            />\r\n                            <p className=\"p-2 text-color-orange cursor-pointer font-sans text-base font-semibold not-italic text-center\">\r\n                                {error ? error : \" \"}\r\n                            </p>\r\n                            <button className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\" type=\"submit\">\r\n                                Sign in\r\n                            </button>\r\n                        </form>\r\n\r\n                        <p className=\"text-center my-3\">Don't have an account {\" \"}\r\n                            <Link to=\"/sign-up\" className=\"text-blue-500 hover:text-blue-600\">\r\n                                Sign up here\r\n                             </Link>\r\n                        </p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport firebase from '../../firebase'\r\ntype User = {\r\n  email: string | '';\r\n  password: string | '';\r\n  name: string | '';\r\n}\r\nconst SignUpPage = ({history}:any) => {\r\n  const [user, setUser] = useState<User | any>(null);\r\n  const [error, setError] = useState('');\r\n  const signupHandler = (event: any) => {\r\n    event.preventDefault();\r\n    if (user === null) {\r\n      setError(\"name,email and password  are required fields\");\r\n    }\r\n    else {\r\n      if (user && (!user.name || !user.email || !user.password)) {\r\n        if (!user.name) {\r\n          setError(\"name is required fields\");\r\n        }\r\n        if (!user.email) {\r\n          setError(\"email is required fields\");\r\n        }\r\n        if (!user.password) {\r\n          setError(\"password is required fields\");\r\n        }\r\n      }\r\n      else {\r\n        setError(\"\");\r\n        firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n          .then((data:any) => {\r\n            let uid = data && data.user && data.user.uid;\r\n            let userObj = {\r\n              fullName: user.name,\r\n              email: user.email,\r\n              uid\r\n            };\r\n            firebase.firestore().collection('users')\r\n              .doc(uid ? uid : \"\")\r\n              .set(userObj);\r\n               history.push('/')\r\n             }).catch(function (error) {\r\n            setError(error.message)\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-8\">\r\n      <h1 className=\"text-3xl mb-2 text-center font-bold\">Sign Up</h1>\r\n      <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n\r\n        <form className=\" \" onSubmit={(e) => {\r\n          signupHandler(e)\r\n        }}>\r\n          <label htmlFor=\"displayName\" className=\"block\">\r\n            Display Name:\r\n          </label>\r\n          <input type=\"text\" className=\"my-1 p-1 w-full outline-none border \" name=\"displayName\" placeholder=\"E.g: Username\" value={user?.name}\r\n            onChange={\r\n              (e) => {\r\n                setError(\"\")\r\n                let dub = { ...user }\r\n                dub.name = e.target.value\r\n                setUser(dub);\r\n              }\r\n            }\r\n          />\r\n          <label htmlFor=\"userEmail\" className=\"block\">\r\n            Email:\r\n          </label>\r\n          <input type=\"email\" className=\"my-1 p-1 w-full border outline-none\" name=\"userEmail\" placeholder=\"E.g: test@gmail.com\"\r\n            id=\"userEmail\"\r\n            value={user?.email}\r\n            onChange={(e) => {\r\n              setError(\"\")\r\n              let dub = { ...user }\r\n              dub.email = e.target.value\r\n              setUser(dub);\r\n            }} />\r\n          <label htmlFor=\"userPassword\" className=\"block\">\r\n            Password:\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"mt-1 mb-3 p-1 w-full outline-none border\"\r\n            name=\"userPassword\"\r\n\r\n            placeholder=\"Your Password\"\r\n            id=\"userPassword\"\r\n            value={user?.password}\r\n            onChange={\r\n              (e) => {\r\n                setError(\"\")\r\n                let dub = { ...user }\r\n                dub.password = e.target.value\r\n                setUser(dub);\r\n              }} />\r\n          <p className=\"p-2 text-color-orange cursor-pointer font-sans text-base font-semibold not-italic text-center\">\r\n            {error ? error : \" \"}\r\n          </p>\r\n          <button\r\n            className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white \" type=\"submit\" >\r\n            Sign up\r\n          </button>\r\n        </form> \r\n        <p className=\"text-center my-3\">\r\n         I have  account?{\" \"}\r\n          <Link to=\"/\" className=\"text-blue-500 hover:text-blue-600\">\r\n            Login\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpPage;","import React, {useContext, useState} from 'react'\r\nimport {GlobalContext} from '../../context/GlobalState'\r\nimport {updateService} from '../../context/services/update'\r\nimport firebase from '../../firebase'\r\nexport default (props: any) => {\r\n    let {\r\n        history\r\n    } = props;\r\n    const {state, getDataAction, delDataAction, dispatch}: any = useContext(GlobalContext);\r\n    const [update, setUpdate] = useState(false);\r\n    const [id, setId] = useState();\r\n    const [data, setData] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    return (\r\n        <div className=\"\">\r\n            <div className=\"py-5\">\r\n                <div className=\"mt-8\">\r\n                    {update &&\r\n                    <div className=\"flex justify-between m-4\">\r\n                        <label className=\" text-base mb-2 flex  font-bold w-1/4\">Edit title:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"my-1 p-1  outline-none border w-1/4\"\r\n                            name=\"title\"\r\n                            placeholder=\"title\"\r\n                            value={title ? title : \"\"}\r\n                            onChange={\r\n                                (e) => {\r\n                                    setTitle(e.target.value)\r\n                                }\r\n                            }\r\n                        />\r\n\r\n                        <button className=\" bg-green-400 hover:bg-green-500 w-1/3 py-2 text-white w-1/4\"\r\n                                onClick={() => {\r\n                                    let dub = [...data]\r\n                                    let filter: any = dub.filter((single: any) => single.id === id);\r\n                                    filter[0].title = title;\r\n                                    updateService(id, dub, dispatch)\r\n                                }}>Update\r\n                        </button>\r\n                    </div>\r\n                    }\r\n                    <button className=\"my-4 bg-green-400 hover:bg-green-500 w-full py-2 text-white\"\r\n                            onClick={() => {\r\n                                firebase.auth().signOut().then(() => {\r\n                                    history.push(\"/login\")\r\n                                })\r\n                            }}>\r\n                        Logout\r\n                    </button>\r\n                    <button className=\"my-4 bg-green-400 hover:bg-green-500 w-full py-2 text-white\" onClick={() =>\r\n                        getDataAction(dispatch)}>getData\r\n                    </button>\r\n                    {state.data.map((sin: any, index: number) =>\r\n                        <div key={index} className=\"flex justify-between m-4\">\r\n                            <p key={index} className=\"text-base mb-2 flex  font-bold w-1/4\">{sin.id} {sin.title}</p>\r\n                            <button className=\" bg-green-400 hover:bg-green-500 w-1/3 py-2 text-white w-1/4\"\r\n                                    onClick={() => {\r\n                                        let filter = state.data.filter((single: any) => single.id !== sin.id);\r\n                                        delDataAction(sin.id, filter, dispatch)\r\n                                    }}>del\r\n                            </button>\r\n\r\n                            <button className=\" bg-green-400 hover:bg-green-500 w-1/3 py-2 text-white w-1/4\"\r\n                                    onClick={() => {\r\n                                        setTitle(\"\")\r\n                                        setUpdate(true)\r\n                                        setId(sin.id)\r\n                                        setData(state.data)\r\n\r\n                                    }}>edit record\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { getApiUrI } from '../../config';\r\nexport const updateService = function (id: any,data:any,dispatch:any) {\r\n    fetch(`${getApiUrI}/${id}`, {\r\n        method: 'PATCH',\r\n        body: JSON.stringify({\r\n            title: 'test',\r\n        }),\r\n        headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n    })\r\n        .then((response) => response.json())\r\n        .then((json) =>\r\n        {\r\n            console.log(\"json\",json);\r\n            dispatch({\r\n                    type: 'GET_DATA',\r\n                    payload: data,\r\n                })\r\n        })\r\n           \r\n    };\r\n\r\n","import React, {useEffect, useContext} from 'react';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\nimport homePage from '../pages/homePage/homePage';\r\nimport firebase from '../firebase'\r\nimport {GlobalContext} from '../context/GlobalState'\r\nconst PrivateRoutes = (props: any) => {\r\n    let {history} = props;\r\n    const {state}: any = useContext(GlobalContext);\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user: any) => {\r\n            if (user && user.uid !== null)\r\n            {\r\n                history.push(\"/\")\r\n            }\r\n            else\r\n            {\r\n                state.loader = false;\r\n                history.push('/login')\r\n            }\r\n\r\n        })\r\n    }, [firebase]);\r\n    return (\r\n        <div>\r\n            {!state.loader ?\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={ homePage }/>\r\n                </Switch> :\r\n                <div>\r\n                    loader...\r\n                </div>}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default withRouter(PrivateRoutes);\r\n","import React, {useEffect, useContext} from 'react';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\nimport LogInPage from '../pages/logInPage/logInPage'\r\nimport SignUpPage from '../pages/signUpPage/signUppage'\r\nimport firebase from '../firebase'\r\nimport PrivateRoutes from './privateRoute';\r\nimport {GlobalContext} from '../context/GlobalState'\r\nconst Routes = (props: any) => {\r\n    let {history} = props;\r\n    const {state}: any = useContext(GlobalContext);\r\nconsole.log(\"state\",state)\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user: any) => {\r\n            if (user.uid) {\r\n                history.push(\"/\")\r\n            }\r\n            else {\r\n                history.push(\"/login\")\r\n            }\r\n        })\r\n    }, [firebase]);\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={ PrivateRoutes }/>\r\n            <Route path=\"/login\" component={LogInPage}/>\r\n            <Route path=\"/signup\" component={SignUpPage}/>\r\n        </Switch>\r\n    )\r\n};\r\n\r\nexport default withRouter(Routes);\r\n","import React from 'react';\r\nimport './tailwind.output.css';\r\nimport './tailwind.css';\r\nimport Routes from './authentication/routes'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { GlobalProvider } from './context/GlobalState';\r\n\r\nfunction App() {\r\n    return (\r\n        <GlobalProvider>\r\n            <BrowserRouter>\r\n                <Routes />\r\n            </BrowserRouter>\r\n        </GlobalProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}